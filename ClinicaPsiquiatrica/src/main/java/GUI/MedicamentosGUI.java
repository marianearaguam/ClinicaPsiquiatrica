/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.MedicamentoDAO;
import DTO.MedicamentoDTO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlo
 */
public class MedicamentosGUI extends javax.swing.JFrame {
private MedicamentoDAO MedicamentoDAO = new MedicamentoDAO();
    /**
     * Creates new form MedicamentosGUI
     */
    public MedicamentosGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Nometxt = new javax.swing.JLabel();
        Descricaotxt = new javax.swing.JLabel();
        QuantidadeEstoquetxt = new javax.swing.JLabel();
        Precotxt = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        txtQuantidadeEstoque = new javax.swing.JTextField();
        txtPreco = new javax.swing.JTextField();
        txtFornecedor = new javax.swing.JTextField();
        Fornecedortxt = new javax.swing.JLabel();
        txtDataValidade = new javax.swing.JTextField();
        DataValidadetxt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMedicamentos = new javax.swing.JTable();
        buttonAtualizar = new javax.swing.JButton();
        buttonCadastrar = new javax.swing.JButton();
        buttonExcluir = new javax.swing.JButton();
        buttonCarregarCampos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        jLabel1.setBackground(new java.awt.Color(0, 102, 51));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 51));
        jLabel1.setText("Medicamentos");

        Nometxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Nometxt.setForeground(new java.awt.Color(0, 0, 0));
        Nometxt.setText("Nome:");

        Descricaotxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Descricaotxt.setForeground(new java.awt.Color(0, 0, 0));
        Descricaotxt.setText("Descrição:");

        QuantidadeEstoquetxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        QuantidadeEstoquetxt.setForeground(new java.awt.Color(0, 0, 0));
        QuantidadeEstoquetxt.setText("Quantidade:");

        Precotxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Precotxt.setForeground(new java.awt.Color(0, 0, 0));
        Precotxt.setText("Preço:");

        txtNome.setBackground(new java.awt.Color(255, 255, 255));
        txtNome.setForeground(new java.awt.Color(0, 0, 0));

        txtDescricao.setBackground(new java.awt.Color(255, 255, 255));
        txtDescricao.setForeground(new java.awt.Color(0, 0, 0));

        txtQuantidadeEstoque.setBackground(new java.awt.Color(255, 255, 255));
        txtQuantidadeEstoque.setForeground(new java.awt.Color(0, 0, 0));

        txtPreco.setBackground(new java.awt.Color(255, 255, 255));
        txtPreco.setForeground(new java.awt.Color(0, 0, 0));

        txtFornecedor.setBackground(new java.awt.Color(255, 255, 255));
        txtFornecedor.setForeground(new java.awt.Color(0, 0, 0));

        Fornecedortxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Fornecedortxt.setForeground(new java.awt.Color(0, 0, 0));
        Fornecedortxt.setText("Fornecedor:");

        txtDataValidade.setBackground(new java.awt.Color(255, 255, 255));
        txtDataValidade.setForeground(new java.awt.Color(0, 0, 0));

        DataValidadetxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        DataValidadetxt.setForeground(new java.awt.Color(0, 0, 0));
        DataValidadetxt.setText("Data de Validade:");

        tableMedicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableMedicamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMedicamentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableMedicamentos);

        buttonAtualizar.setText("Atualizar");
        buttonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAtualizarActionPerformed(evt);
            }
        });

        buttonCadastrar.setText("Cadastrar");
        buttonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrarActionPerformed(evt);
            }
        });

        buttonExcluir.setText("Excluir");
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });

        buttonCarregarCampos.setText("Carregar Campos");
        buttonCarregarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCarregarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Descricaotxt)
                            .addComponent(Nometxt)
                            .addComponent(QuantidadeEstoquetxt)
                            .addComponent(Precotxt)
                            .addComponent(Fornecedortxt)
                            .addComponent(DataValidadetxt))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantidadeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buttonCadastrar)
                                .addGap(26, 26, 26)
                                .addComponent(buttonAtualizar)
                                .addGap(26, 26, 26)
                                .addComponent(buttonExcluir)
                                .addGap(31, 31, 31)
                                .addComponent(buttonCarregarCampos))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nometxt)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Descricaotxt))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantidadeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuantidadeEstoquetxt))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Precotxt))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Fornecedortxt))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DataValidadetxt)
                    .addComponent(txtDataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCadastrar)
                    .addComponent(buttonAtualizar)
                    .addComponent(buttonExcluir)
                    .addComponent(buttonCarregarCampos))
                .addContainerGap(270, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrarActionPerformed
        cadastrarMedicamento();
    }//GEN-LAST:event_buttonCadastrarActionPerformed

    private void buttonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAtualizarActionPerformed
       atualizarMedicamento();
      listarMedicamentos();
      carregarCamposMedicamento();
    }//GEN-LAST:event_buttonAtualizarActionPerformed

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        excluirMedicamento();
       listarMedicamentos();
       limparCamposMedicamento();
    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void buttonCarregarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCarregarCamposActionPerformed
        carregarCamposMedicamento();
    }//GEN-LAST:event_buttonCarregarCamposActionPerformed

    private void tableMedicamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMedicamentosMouseClicked
        carregarCamposMedicamento();
        listarMedicamentos();
    }//GEN-LAST:event_tableMedicamentosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicamentosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicamentosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicamentosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicamentosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicamentosGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DataValidadetxt;
    private javax.swing.JLabel Descricaotxt;
    private javax.swing.JLabel Fornecedortxt;
    private javax.swing.JLabel Nometxt;
    private javax.swing.JLabel Precotxt;
    private javax.swing.JLabel QuantidadeEstoquetxt;
    private javax.swing.JButton buttonAtualizar;
    private javax.swing.JButton buttonCadastrar;
    private javax.swing.JButton buttonCarregarCampos;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMedicamentos;
    private javax.swing.JTextField txtDataValidade;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtFornecedor;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtQuantidadeEstoque;
    // End of variables declaration//GEN-END:variables
private void cadastrarMedicamento() {
    // Capturando os dados do formulário
    String nome = Nometxt.getText();
    String descricao = Descricaotxt.getText();
    String quantidadeEstoque = txtQuantidadeEstoque.getText();
    String preco = Precotxt.getText();
    String fornecedor = Fornecedortxt.getText();
    String dataValidade = txtDataValidade.getText();

    try {
        // Validação básica
        if (nome.isEmpty() || descricao.isEmpty() || quantidadeEstoque.isEmpty() || preco.isEmpty() || fornecedor.isEmpty() || dataValidade.isEmpty()) {
            JOptionPane.showMessageDialog(null, "❌ Preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Criando o objeto MedicamentoDTO
        MedicamentoDTO novoMedicamento = new MedicamentoDTO( nome, descricao, quantidadeEstoque,preco, fornecedor, dataValidade);

        // Chamando o método da DAO para adicionar no banco
        MedicamentoDAO.adicionarMedicamento(novoMedicamento);

        JOptionPane.showMessageDialog(null, "✅ Medicamento cadastrado com sucesso!");
        listarMedicamentos(); // Atualiza a tabela
        limparCamposMedicamento();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "❌ Erro ao cadastrar medicamento: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}
private void atualizarMedicamento() {
    int selectedRow = tableMedicamentos.getSelectedRow();
    if (selectedRow != -1) {
        int id = (int) tableMedicamentos.getValueAt(selectedRow, 0);
        String nome = Nometxt.getText();
        String descricao = Descricaotxt.getText();
        String quantidadeEstoque = txtQuantidadeEstoque.getText();
        String preco = Precotxt.getText();
        String fornecedor = Fornecedortxt.getText();
        String dataValidade = txtDataValidade.getText();

        try {
            MedicamentoDTO medicamentoAtualizado = new MedicamentoDTO(nome, descricao, quantidadeEstoque, preco, fornecedor, dataValidade);

            // Atualiza no banco
            MedicamentoDAO.atualizarMedicamento(medicamentoAtualizado);

            JOptionPane.showMessageDialog(null, "✅ Medicamento atualizado com sucesso!");
            listarMedicamentos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "❌ Erro ao atualizar medicamento: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "⚠️ Selecione um medicamento para atualizar.", "Aviso", JOptionPane.WARNING_MESSAGE);
    }
}
private void excluirMedicamento() {
    int selectedRow = tableMedicamentos.getSelectedRow();
    if (selectedRow != -1) {
        int idMedicamento = (int) tableMedicamentos.getValueAt(selectedRow, 0);
        int confirmacao = JOptionPane.showConfirmDialog(null, "🛑 Deseja realmente excluir este medicamento?", "Confirmação", JOptionPane.YES_NO_OPTION);

        if (confirmacao == JOptionPane.YES_OPTION) {
            MedicamentoDAO.excluirMedicamento(idMedicamento);
            listarMedicamentos();
            JOptionPane.showMessageDialog(null, "✅ Medicamento excluído com sucesso!");
        }
    } else {
        JOptionPane.showMessageDialog(null, "⚠️ Selecione um medicamento para excluir.", "Aviso", JOptionPane.WARNING_MESSAGE);
    }
}
private void carregarCamposMedicamento() {
    int setar = tableMedicamentos.getSelectedRow();
    
    if (setar >= 0) {
        Nometxt.setText(tableMedicamentos.getModel().getValueAt(setar, 1).toString());
        Descricaotxt.setText(tableMedicamentos.getModel().getValueAt(setar, 2).toString());
        txtQuantidadeEstoque.setText(tableMedicamentos.getModel().getValueAt(setar, 3).toString());
        Precotxt.setText(tableMedicamentos.getModel().getValueAt(setar, 4).toString());
        Fornecedortxt.setText(tableMedicamentos.getModel().getValueAt(setar, 5).toString());
        txtDataValidade.setText(tableMedicamentos.getModel().getValueAt(setar, 6).toString());
    } else {
        JOptionPane.showMessageDialog(null, "⚠️ Nenhuma linha selecionada!", "Aviso", JOptionPane.WARNING_MESSAGE);
    }
}
private void listarMedicamentos() {
    try {
        List<MedicamentoDTO> medicamentos = MedicamentoDAO.listarMedicamentos();
        System.out.println("📌 Medicamentos encontrados no banco: " + medicamentos.size());

        DefaultTableModel model = (DefaultTableModel) tableMedicamentos.getModel();
        model.setNumRows(0); // Limpa a tabela antes de adicionar novos dados

        for (MedicamentoDTO medicamento : medicamentos) {
            System.out.println("✅ Adicionando: " + medicamento.getNome());
            Object[] rowData = {
                medicamento.getId(),
                medicamento.getNome(),
                medicamento.getDescricao(),
                medicamento.getQuantidadeEstoque(),
                medicamento.getPreco(),
                medicamento.getFornecedor(),
                medicamento.getDataValidade()
            };
            model.addRow(rowData);
        }

        tableMedicamentos.repaint(); // Atualiza a tabela
        tableMedicamentos.revalidate();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "❌ Erro ao carregar os medicamentos: " + e.getMessage());
    }
}
private void limparCamposMedicamento() {
    Nometxt.setText(null);
    Descricaotxt.setText(null);
    txtQuantidadeEstoque.setText(null);
    Precotxt.setText(null);
    Fornecedortxt.setText(null);
    txtDataValidade.setText(null);
    Nometxt.requestFocus();
}
}
